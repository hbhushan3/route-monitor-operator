// Code generated by MockGen. DO NOT EDIT.
// Source: common.go
//
// Generated by this command:
//
//	mockgen -source common.go -destination ../util/test/generated/mocks/reconcile/common.go -package reconcileCommon
//

// Package reconcileCommon is a generated GoMock package.
package reconcileCommon

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockResourceComparerInterface is a mock of ResourceComparerInterface interface.
type MockResourceComparerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockResourceComparerInterfaceMockRecorder
}

// MockResourceComparerInterfaceMockRecorder is the mock recorder for MockResourceComparerInterface.
type MockResourceComparerInterfaceMockRecorder struct {
	mock *MockResourceComparerInterface
}

// NewMockResourceComparerInterface creates a new mock instance.
func NewMockResourceComparerInterface(ctrl *gomock.Controller) *MockResourceComparerInterface {
	mock := &MockResourceComparerInterface{ctrl: ctrl}
	mock.recorder = &MockResourceComparerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceComparerInterface) EXPECT() *MockResourceComparerInterfaceMockRecorder {
	return m.recorder
}

// DeepEqual mocks base method.
func (m *MockResourceComparerInterface) DeepEqual(x, y any) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeepEqual", x, y)
	ret0, _ := ret[0].(bool)
	return ret0
}

// DeepEqual indicates an expected call of DeepEqual.
func (mr *MockResourceComparerInterfaceMockRecorder) DeepEqual(x, y any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeepEqual", reflect.TypeOf((*MockResourceComparerInterface)(nil).DeepEqual), x, y)
}
